In order to run 'vulnerability_examle' you must do it in a docker container, with glibc 2.32 or 2.33

How to safely run the exploit:

1 - Open Docker Desktop

2 - In your IDE of choice, type in the terminal: docker images
If there is an image named cve-2021-33574_cwe-416_image, skip to step 4, else continue to step 3.

3 - Type in the terminal: docker build -t cve-2021-33574_cwe-416_image . 

4 - In wsl terminal insert: docker run --privileged -it \-v "/mnt/c/Users/User/Desktop/Universidade/Pesquisa AI-SSD/vulnerabilities/CVE-2021-33574_CWE-416:/mnt/code" \cve-2021-33574_cwe-416_image
Note: change the path in the command with yours -> "[your path]/vulnerabilities/CVE-2021-33574_CWE-416:/mnt/code"

If it takes too long, cancel, restart docker, and try again. The terminal should look like this:

[root@56b80ca79b29 /]# 

Then insert: 
to disable ASLR
 - echo 0 > /proc/sys/kernel/randomize_va_space

to go to where the code is
 - cd mnt/code/

if you then insert ls, you should see the code file 'vulnerability_example.c'

5 - Check glibc version with: ldd --version
The following message should appear:

ldd (GNU libc) 2.32  //(or 2.33)
Copyright (C) 2020 Free Software Foundation, Inc.
This is free software; see the source for copying conditions.  There is NO
warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
Written by Roland McGrath and Ulrich Drepper.

6 - Compile with: gcc -fsanitize=address -g -O1 -pthread -o vuln vulnerability_example.c -lrt
Run with: for i in {1..10}; do echo "Run #$i"; ./vuln; done


7 - To quit docker insert: exit

NOTE:
the vulnerability is non-deterministic and requires:

    Perfect timing

    Thread interleaving during mq_notify unregister/register

    Possibly multiple runs to trigger
